// <auto-generated />
using System;
using FitTinaV2.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FitTinaV2.Migrations
{
    [DbContext(typeof(FitTinaDbContext))]
    [Migration("20201210211435_Initial_AzureSQL")]
    partial class Initial_AzureSQL
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FitTinaV2.Models.Exercise", b =>
                {
                    b.Property<int>("ExerciseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EquipmentRequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExerciseID");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("FitTinaV2.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("EquipmentPref")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Feet")
                        .HasColumnType("int");

                    b.Property<string>("FitnessGoal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int>("Inches")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FitTinaV2.Models.Workout", b =>
                {
                    b.Property<int>("WorkoutID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Effort")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Exercise1ExerciseID")
                        .HasColumnType("int");

                    b.Property<int?>("Exercise2ExerciseID")
                        .HasColumnType("int");

                    b.Property<int?>("Exercise3ExerciseID")
                        .HasColumnType("int");

                    b.Property<int?>("Exercise4ExerciseID")
                        .HasColumnType("int");

                    b.Property<int?>("Exercise5ExerciseID")
                        .HasColumnType("int");

                    b.Property<int?>("Exercise6ExerciseID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Reps")
                        .HasColumnType("int");

                    b.Property<int>("Sets")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("WorkoutID");

                    b.HasIndex("Exercise1ExerciseID");

                    b.HasIndex("Exercise2ExerciseID");

                    b.HasIndex("Exercise3ExerciseID");

                    b.HasIndex("Exercise4ExerciseID");

                    b.HasIndex("Exercise5ExerciseID");

                    b.HasIndex("Exercise6ExerciseID");

                    b.HasIndex("UserID");

                    b.ToTable("Workouts");
                });

            modelBuilder.Entity("FitTinaV2.Models.Workout", b =>
                {
                    b.HasOne("FitTinaV2.Models.Exercise", "Exercise1")
                        .WithMany()
                        .HasForeignKey("Exercise1ExerciseID");

                    b.HasOne("FitTinaV2.Models.Exercise", "Exercise2")
                        .WithMany()
                        .HasForeignKey("Exercise2ExerciseID");

                    b.HasOne("FitTinaV2.Models.Exercise", "Exercise3")
                        .WithMany()
                        .HasForeignKey("Exercise3ExerciseID");

                    b.HasOne("FitTinaV2.Models.Exercise", "Exercise4")
                        .WithMany()
                        .HasForeignKey("Exercise4ExerciseID");

                    b.HasOne("FitTinaV2.Models.Exercise", "Exercise5")
                        .WithMany()
                        .HasForeignKey("Exercise5ExerciseID");

                    b.HasOne("FitTinaV2.Models.Exercise", "Exercise6")
                        .WithMany()
                        .HasForeignKey("Exercise6ExerciseID");

                    b.HasOne("FitTinaV2.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
